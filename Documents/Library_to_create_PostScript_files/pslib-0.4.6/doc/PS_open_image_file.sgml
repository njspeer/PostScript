<!doctype refentry PUBLIC "-//OASIS//DTD DocBook V4.1//EN" [

<!-- Process this file with docbook-to-man to generate an nroff manual
     page: `docbook-to-man manpage.sgml > manpage.1'.  You may view
     the manual page with: `docbook-to-man manpage.sgml | nroff -man |
     less'.  A typical entry in a Makefile or Makefile.am is:

manpage.1: manpage.sgml
	docbook-to-man $< > $@

    
	The docbook-to-man binary is found in the docbook-to-man package.
	Please remember that if you create the nroff version in one of the
	debian/rules file targets (such as build), you will need to include
	docbook-to-man in your Build-Depends control field.

  -->

  <!-- Fill in your name for FIRSTNAME and SURNAME. -->
  <!ENTITY dhfirstname "<firstname>UWE</firstname>">
  <!ENTITY dhsurname   "<surname>STEINMANN</surname>">
  <!-- Please adjust the date whenever revising the manpage. -->
  <!ENTITY dhdate      "<date>March 28, 2011</date>">
  <!-- SECTION should be 1-8, maybe w/ subsection other parameters are
       allowed: see man(7), man(1). -->
  <!ENTITY dhsection   "<manvolnum>3</manvolnum>">
  <!ENTITY dhemail     "<email>uwe@steinmann.cx</email>">
  <!ENTITY dhusername  "Uwe Steinmann">
  <!ENTITY dhucpackage "<refentrytitle>PS_OPEN_IMAGE_FILE</refentrytitle>">
  <!ENTITY funcname    "PS_open_image_file">

  <!ENTITY debian      "<productname>Debian</productname>">
  <!ENTITY gnu         "<acronym>GNU</acronym>">
  <!ENTITY gpl         "&gnu; <acronym>GPL</acronym>">
]>

<refentry>
  <refentryinfo>
    <address>
      &dhemail;
    </address>
    <author>
      &dhfirstname;
      &dhsurname;
    </author>
    <copyright>
      <year>2003-2011</year>
      <holder>&dhusername;</holder>
    </copyright>
    &dhdate;
  </refentryinfo>
  <refmeta>
    &dhucpackage;

    &dhsection;
  </refmeta>
  <refnamediv>
    <refname>&funcname;</refname>

    <refpurpose>Opens an image from file</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>#include &lt;pslib.h&gt;</para>
		<para>int &funcname;(PSDoc *psdoc, const char *type, const char *filename, const char *stringparam, int intparam)</para>
  </refsynopsisdiv>
  <refsect1>
    <title>DESCRIPTION</title>

    <para>This function reads image data from a file. It can read png, jpeg,
		  gif, tiff, and eps files. png, jpeg, gif, and tiff images can only
			be read if pslib has been compiled with support for those formats.
			Once an image has been loaded it can be placed on a page with
			<function>PS_place_image(3)</function>.</para>
		<para>Since version 0.4.5 of pslib images are read by default for later
			reuse. This means that the image is saved into a so called reusable
			stream object. Later calls of <function>PS_place_image(3)</function>
			will only put a short
			sequence of postscript code into the output file replaying the image.
			This reduces the overall postscript file size, speeds up its processing by
			the postscript rip and allows to place images into templates. This
			behaviour can be turned off by setting the parameter `imagereuse'
			to false with <function>PS_set_parameter(3)</function>.</para>

  </refsect1>
  <refsect1>
    <title>RETURN VALUE</title>
    <para>Returns identifier of image or zero in case of an error.
		  The identifier is a positiv number greater 0.</para>
  </refsect1>
  <refsect1>
    <title>SEE ALSO</title>

    <para>PS_open_image(3), PS_place_image(3), PS_close_image(3)</para>

  </refsect1>
  <refsect1>
    <title>AUTHOR</title>

    <para>This manual page was written by &dhusername; &dhemail;.</para>

  </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->


